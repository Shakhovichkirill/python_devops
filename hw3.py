# Задание 1
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def division(*args):
    try:
        n = int(input("Введите первое число: "))
        m = int(input("Введите второе число: "))
        result = n / m
    except ZeroDivisionError:
        return "На ноль делить нельзя!"
    return result


print(division())


# Задание 2
# Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def func(name, lastname, year_of_birth, city, email, phone):
    return ' '.join([name, lastname, year_of_birth, city, email, phone])


print(func(name='Ivan', lastname='Ivanov', year_of_birth='1988', city='Ivanovo', email='iivanov@mail.ru',
           phone='89111234567'))


# Задание 3
#  Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.
def my_func(a1, a2, a3):
    if a1 >= a3 and a2 >= a3:
        return a1 + a2
    elif a1 > a2 and a1 < a3:
        return a1 + a3
    else:
        return a2 + a3


print(f'Result - {my_func(int(input("Введите первый аргумент: ")), int(input("Введите второй аргумент: ")), int(input("Введите третий аргумент: ")))}')

# Задание 4
# Реализовать функцию my_func(), которая принимает три позиционных аргумента,
#  и возвращает сумму наибольших двух аргументов.

def func(x, y):
    return x ** y
print(func(2, 8))

def power_func(a,n):
    if a == 0: return 0
    if n < 0:
        a= 1.0/a
        n= -n
    res= 1
    while n > 0:
        res= res * a
        n= n-1
    return res
print(power_func(2, 8))

# Задание 5
# Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и
#  снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
#  Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее
# сумме и после этого завершить программу.

def sum_func ():
    result = 0
    ext = False
    while ext == False:
        number = input('Для выхода из режима ввоа введите \q - ').split()
        n = 0
        for i in range(len(number)):
            if number[i] == '\q':
                ext = True
                break
            else:
                n = n + int(number[i])
        result = result + n
        print(f'Текущая сумма {result}')
    print(f'Итоговая сумма {result}')
sum_func()

# Задание 6
# Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов,
#  разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(str):
    return str.title()
print(int_func('text'))

new_str = input('Введите строку, каждое слово с маленькой буквы: ').split()
n = []
for i in new_str:
    n.append(int_func(i))
print(' '.join(n))